from telebot import types
from config import bot
from get_weather import get_weather_report
from date_maker import date_maker
import json


@bot.message_handler(commands=['start'])
def handle_start(message):
    keyboard_start = types.InlineKeyboardMarkup()
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –≠—Ç–æ –Ω–∞—à –±–æ—Ç, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç–¥—ã—Ö–µ –≤ –ú–æ—Å–∫–≤–µ, —Å–∞–º—ã—Ö –ª—É—á—à–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö –∏ –≤—Å—Ç—Ä–µ—á–∞—Ö!".format(message.from_user),
        reply_markup=keyboard_start
    )
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:", reply_markup=keyboard_choose)


@bot.message_handler(content_types=['text'])
def event_type_search(message):
    global keyboard_choose
    global date_keyboard
    global event_types_keyboard
    btn_date = []
    days = date_maker()
    counter = 0
    for day in days:
        counter += 1
        btn_date.append(types.KeyboardButton(day))
    date_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    date_keyboard.add(btn_date[0], btn_date[1], btn_date[2], btn_date[3], btn_date[4], btn_date[5], btn_date[6],
                      btn_date[7], btn_date[8], btn_date[9]).row()

    keyboard_choose = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    search_btn1 = types.KeyboardButton("–ü–æ–∏—Å–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ –¥–∞—Ç–∞–ºüîç")
    search_btn2 = types.KeyboardButton("–ü–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã –ø–æ –¥–∞—Ç–∞–º üåß")
    keyboard_choose.add(search_btn1).row(search_btn2)

    if message.text == "–ü–æ–∏—Å–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ –¥–∞—Ç–∞–ºüîç":  # –ø–æ–∏—Å–∫ –ø–æ —Ç–∏–ø–∞–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        event_types_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        event_types_keyboard.add("–ö–∏–Ω–æüçø").row(types.KeyboardButton("–¢–µ–∞—Ç—Äü•ª"),
                                                 types.KeyboardButton("–ï–ª–∫–∏üë¶"),
                                                 types.KeyboardButton("–ö–æ–Ω—Ü–µ—Ä—Ç—ãü•≥"),
                                                 types.KeyboardButton("–°—Ç–µ–Ω–¥–∞–øü§≠"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:", reply_markup=event_types_keyboard)
        bot.register_next_step_handler(message, event_date_search)
    elif message.text == "–ü–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã –ø–æ –¥–∞—Ç–∞–º üåß":  # –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É", reply_markup=date_keyboard)
        bot.register_next_step_handler(message, report_message)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫–æ–µ —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω :(")


def report_message(message):
    try:
        bot.send_message(message.chat.id, get_weather_report(message), reply_markup=keyboard_choose)
    except ValueError:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏",
                         reply_markup=date_keyboard)
        bot.register_next_step_handler(message, report_message)


def event_reader(date):
    try:
        select_day = ""
        with open(file, "r", encoding="utf8") as json_file:
            json_file = json.load(json_file)
            for day in json_file:
                if f"{date.text[8:]}-{months[int(date.text[5:7])-1]}" == day:
                    select_day = day
                    break
            event_list_length = len(json_file[select_day]["prices"])
            if event_list_length == 0:
                bot.send_message(date.chat.id, "–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å", reply_markup=keyboard_choose)
            else:
                for i in range(event_list_length-1):
                    if json_file[select_day]["prices"][i] != "–ë–∏–ª–µ—Ç—ã":
                        price = f"–¶–µ–Ω–∞: {json_file[select_day]["prices"][i]}\n"
                    else:
                        price = f"–ë–∏–ª–µ—Ç—ã –µ—Å—Ç—å"
                    bot.send_message(date.chat.id, f"–ù–∞–∑–≤–∞–Ω–∏–µ: {json_file[select_day]["names"][i]}\n{price}–°—Å—ã–ª–∫–∞: {json_file[select_day]["urls"][i]}")
                bot.send_message(date.chat.id, f"–ù–∞–∑–≤–∞–Ω–∏–µ: {json_file[select_day]["names"][event_list_length-1]}\n–¶–µ–Ω–∞: {json_file[select_day]["prices"][event_list_length-1]}\n–°—Å—ã–ª–∫–∞: {json_file[select_day]["urls"][event_list_length-1]}", reply_markup=keyboard_choose)
    except ValueError:
        bot.send_message(date.chat.id, "–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏", reply_markup=date_keyboard)
        bot.register_next_step_handler(date, event_reader)


def event_date_search(message):
    global file
    if message.text == "–ö–∏–Ω–æüçø":
        file = "JSON/schedule_cinema.json"
    elif message.text == "–¢–µ–∞—Ç—Äü•ª":
        file = "JSON/schedule_theatre.json"
    elif message.text == "–ï–ª–∫–∏üë¶":
        file = "JSON/new-year-for-kids.json"
    elif message.text == "–ö–æ–Ω—Ü–µ—Ä—Ç—ãü•≥":
        file = "JSON/schedule_concert.json"
    elif message.text == "–°—Ç–µ–Ω–¥–∞–øü§≠":
        file = "JSON/standup.json"
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏", reply_markup=event_types_keyboard)
        bot.register_next_step_handler(message, event_date_search)
    if file != "":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", reply_markup=date_keyboard)
        bot.register_next_step_handler(message, event_reader)


def main():
    bot.infinity_polling()


if __name__ == "__main__":
    event_types_keyboard = ""
    keyboard_choose = ""
    date_keyboard = ""
    file = ""
    months = [
        "yanvarya",
        "fevralya",
        "marta",
        "aprelya",
        "maya",
        "iyunya",
        "iyulya",
        "avgusta",
        "sentyabrya",
        "oktyabrya",
        "noyabrya",
        "dekabrya",
    ]
    main()
